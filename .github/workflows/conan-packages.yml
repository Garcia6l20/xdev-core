name: Conan packages

on:
  push:
    tags:
       - v*

jobs:
  linux:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}

    env:
      CONAN_XDEV_TOKEN: ${{ secrets.CONAN_XDEV_TOKEN }}

    strategy:
      fail-fast: false
      matrix:
        name:
          - ubuntu-18.04-gcc-9-debug
          - ubuntu-18.04-gcc-9-release

        include:

          - name: ubuntu-18.04-gcc-9-debug
            os: ubuntu-18.04
            compiler: gcc
            version: "9"
            build_type: Debug

          - name: ubuntu-18.04-gcc-9-release
            os: ubuntu-18.04
            compiler: gcc
            version: "9"
            build_type: Release

    steps:
      - uses: actions/checkout@v1
      - name: System setup
        run: |
          set -xe

          echo -- Installing cmake...
          curl -sSL https://github.com/Kitware/CMake/releases/download/v3.15.4/cmake-3.15.4-Linux-x86_64.tar.gz -o cmake.tar.gz
          sudo tar xf cmake.tar.gz --strip 1 -C /usr/local && rm cmake.tar.gz

          echo -- Removing outdated compilers
          sudo apt autoremove gcc g++

          echo -- Setting up xenial repositories
          sudo add-apt-repository "deb http://dk.archive.ubuntu.com/ubuntu/ xenial main"
          sudo add-apt-repository "deb http://dk.archive.ubuntu.com/ubuntu/ xenial universe"
          sudo apt-get update

          # install required gcc version
          if [ "${{ matrix.compiler }}" = "gcc" ]; then
            echo -- Installing gcc-${{ matrix.version }}...
            sudo apt-get install -y g++-${{ matrix.version }}
            echo "::set-env name=CC::gcc-${{ matrix.version }}"
            echo "::set-env name=CXX::g++-${{ matrix.version }}"
          fi

          echo -- Installing setuptools, pip, wheel and conan
          sudo apt install -y python3-setuptools python3-pip
          sudo -H pip3 install wheel
          sudo -H pip3 install conan

          conan remote add xdev https://api.bintray.com/conan/6l20garcia/xdev

      - name: Build conan package
        run: |
          set -xe
          git clean -fd
          conan create . -s build_type=${{ matrix.build_type }} --profile=./.conan/profiles/${{ matrix.compiler }}-${{ matrix.version }} --build missing
          conan user -p ${CONAN_XDEV_TOKEN} -r xdev 6l20garcia
          conan upload --all --confirm -r xdev xdev-core

  windows:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}

    env:
      CONAN_XDEV_TOKEN: ${{ secrets.CONAN_XDEV_TOKEN }}

    strategy:
      fail-fast: false
      matrix:
        name:
          - windows-2019-debug
          - windows-2019-release

        include:

          - name: windows-2019-debug
            os: windows-2019
            build_type: Debug

          - name: windows-2019-release
            os: windows-2019
            build_type: Release

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3
      uses: actions/setup-python@v1
      with:
        python-version: 3
    - name: System setup
      run: |
        python -m pip install --upgrade pip
        pip install conan
        conan remote add xdev https://api.bintray.com/conan/6l20garcia/xdev
    - name: Build conan package
      run: |
        git clean -fd
        conan create . -s build_type=${{ matrix.build_type }} --build missing
        conan user -p ${CONAN_XDEV_TOKEN} -r xdev 6l20garcia
        conan upload --all --confirm -r xdev xdev-core
