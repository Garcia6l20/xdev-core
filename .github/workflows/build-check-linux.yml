name: Build linux

#on:
#  push:
#    paths-ignore:
#      - '*.md'
#    branches:
#      - master
#      - devel
#  pull_request:
#    paths-ignore:
#      - '*.md'
#    branches:
#      - master
#      - devel

jobs:
  linux:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        name: [ubuntu-20.04]

        include:
          - name: ubuntu-20.04
            os: ubuntu-20.04
            compiler: gcc
            version: "10"

    steps:
      - uses: actions/checkout@v1
      - name: System setup
        run: |
          set -xe

          sudo apt-get update

          # install required gcc version
          if [ "${{ matrix.compiler }}" = "gcc" ]; then
            echo -- Installing gcc-${{ matrix.version }}...
            sudo apt-get install -y g++-${{ matrix.version }}
            echo "::set-env name=CC::gcc-${{ matrix.version }}"
            echo "::set-env name=CXX::g++-${{ matrix.version }}"
          fi

          echo -- Installing setuptools, pip, wheel and conan
          sudo apt install -y python3-setuptools python3-pip
          sudo -H pip3 install wheel
          sudo -H pip3 install conan

          conan remote add xdev https://api.bintray.com/conan/6l20garcia/xdev

      - name: Run test build
        run: |
          mkdir build
          cd build
          # conan install .. --profile=../.conan/profiles/${{ matrix.compiler }}-${{ matrix.version }} --build missing
          cmake -DCMAKE_BUILD_TYPE=Debug -DXDEV_UNIT_TESTING=ON ..
          make -j
          ctest

      # - name: Build conan package
      #   run: |
      #     conan create . -s build_type=Debug --profile=./.conan/profiles/${{ matrix.compiler }}-${{ matrix.version }} --build missing
